/*
 * Name: Zixin Cheng
 * Course: SENG1120
 * Student number: 3218124
*/

namespace czx_project
{
	template <typename value_type>
	Node<value_type>::Node(const value_type& initialData, Node<value_type>* initialNext, Node<value_type>* initialPrevious)
	{
		data = initialData; // Set default data
		next = initialNext; // Set default next
		previous = initialPrevious; // Set default previous
	}
	
	template <typename value_type>
	Node<value_type>::~Node()
	{
		next = NULL;
		previous = NULL;
	}
	
	template <typename value_type>
	void Node<value_type>::setData(const value_type& newData)
	{
		data = newData; // Assign the new value of data
	}
	
	template <typename value_type>
	void Node<value_type>::setNext(Node<value_type>* newNext)
	{
		next = newNext;  // Assign the new value of next pointer
	}
	
	template <typename value_type>
	void Node<value_type>::setPrevious(Node<value_type>* newPrevious)
	{
		previous = newPrevious;  // Assign the new value of previous pointer
	}
	
	template <typename value_type>
	value_type Node<value_type>::getData() const
	{
		return data;  // Return the data
	}
	
	template <typename value_type>
	const Node<value_type>* Node<value_type>::getPrevious () const
	{
		return previous;  // Return the previous pointer in constant
	}
	
	template <typename value_type>
	Node<value_type>* Node<value_type>::getNext()
	{
		return next;  // Return the next pointer
	}
	
	template <typename value_type>
	const Node<value_type>* Node<value_type>::getNext () const
	{
		return next;  // Return the next pointer in constant
	}
	
	template <typename value_type>
	Node<value_type>* Node<value_type>::getPrevious()
	{
		return previous;  // Return the previous pointer
	}
}